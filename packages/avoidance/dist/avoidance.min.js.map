{"version":3,"file":"avoidance.min.js","sources":["../src/particle.ts","../src/util.ts","../src/animate.ts","../src/displacing.ts","../src/geometry.ts","../src/thresholding.ts","../src/avoidance.js"],"sourcesContent":["import { IPositionRatio, ISizeRatio } from './dom';\r\n\r\nexport class Particle {\r\n  protected _element: HTMLElement;\r\n  protected _container: HTMLElement;\r\n  protected _originalPosRatio: IPositionRatio;\r\n\r\n  //===========================================================================\r\n  // Ctor and Dtor\r\n  //===========================================================================\r\n\r\n  constructor(element: HTMLElement, container: HTMLElement) {\r\n    // Save both elements\r\n    this._element = element;\r\n    this._container = container;\r\n    // Save the original position\r\n    this._originalPosRatio = this.getPosRatio();\r\n  }\r\n  \r\n  dispose() {\r\n    // TODO: return particle to original location, either by setting style or removing location style\r\n  }\r\n  \r\n  //===========================================================================\r\n  // Getters\r\n  //===========================================================================\r\n\r\n  get originalPosRatio(): IPositionRatio {\r\n    return this._originalPosRatio;\r\n  }\r\n\r\n  get element(): HTMLElement {\r\n    return this._element;\r\n  }\r\n\r\n  get container(): HTMLElement {\r\n    return this._container;\r\n  }\r\n\r\n  getPosRatio(): IPositionRatio {\r\n    // Get position as percentage of container to get built-in responsiveness!\r\n    const elementRect = this.element.getBoundingClientRect();\r\n    const containerRect = this.container.getBoundingClientRect();\r\n    return {\r\n      x: (elementRect.left - containerRect.left) / containerRect.width,\r\n      y: (elementRect.top - containerRect.top) / containerRect.height,\r\n    };\r\n  }\r\n  getSizeRatio(): ISizeRatio {\r\n    // Get size as percentage of container to get built-in responsiveness!\r\n    const elementRect = this.element.getBoundingClientRect();\r\n    const containerRect = this.container.getBoundingClientRect();\r\n    return {\r\n      width: elementRect.width / containerRect.width,\r\n      height: elementRect.height / containerRect.height,\r\n    };\r\n  }\r\n  \r\n  //===========================================================================\r\n  // Freezing and unfreezing the particle\r\n  //===========================================================================\r\n\r\n  private _frozenStyledPosition?: string; // a CSSStyleDeclaration.position\r\n  unfreeze() {\r\n    this._frozenStyledPosition = this.element.style.position;\r\n    const delayedUnfreezeActions = (() => {\r\n      this.element.style.position = 'absolute';\r\n      this.container.removeEventListener('mousemove', delayedUnfreezeActions);\r\n    }).bind(this);\r\n    this.container.addEventListener('mousemove', delayedUnfreezeActions);\r\n  }\r\n  freeze() {\r\n    this.element.style.position = this.element.style.position;\r\n  }\r\n}","export function floatToPctStr(x: number) {\r\n  return (100.0 * x) + \"%\";\r\n}","import { IPoint } from './geometry';\r\nimport { floatToPctStr } from './util';\r\n\r\nconst FRAME_DURATION = 10.0;\r\n\r\n// Timing functions\r\ntype TimingFn = (t: number) => number;\r\ntype TimingFnBuilder = (duration: number) => TimingFn;\r\ninterface TimingFnBuilderMap {\r\n  [key: string]: TimingFnBuilder;\r\n}\r\nexport const timings: TimingFnBuilderMap = {\r\n  linear: (duration: number) => (t: number) => t/duration,\r\n  easeOutCubic: (duration: number) => (t: number) => 1+Math.pow(t/duration-1, 3),\r\n  easeOutExpo: duration => t => 1-Math.pow(2, -10*t/duration),\r\n}\r\n\r\n// Path functions\r\ntype PathFn = (s: number) => IPoint;\r\ntype PathFnBuilder = (controlPoints: Array<IPoint>) => PathFn;\r\ninterface PathFnBuilderMap {\r\n  [key: string]: PathFnBuilder;\r\n}\r\nexport const paths: PathFnBuilderMap = {\r\n  linear: function([p0, p1]) {\r\n    return s => ({\r\n      x: p0.x + s*(p1.x - p0.x),\r\n      y: p0.y + s*(p1.y - p0.y),\r\n    });\r\n  },\r\n  bezierQuad: function([p0, p1, p2]) {\r\n    return s => ({\r\n      x: p1.x + (1.0-s)*(1.0-s)*(p0.x-p1.x) + s*s*(p2.x-p1.x),\r\n      y: p1.y + (1.0-s)*(1.0-s)*(p0.y-p1.y) + s*s*(p2.y-p1.y),\r\n    });\r\n  },\r\n}\r\n\r\nexport function move(element: HTMLElement, pathing: PathFn, duration: number, timing: TimingFnBuilder) {\r\n  var time = 0;\r\n  var distance = 0;\r\n  const distanceFromTime = timing(duration);\r\n  const animation = setInterval(() => {\r\n    // Check for final condition\r\n    if (time >= duration) {\r\n      clearInterval(animation);\r\n    }\r\n    // Calculate position\r\n    const pos = pathing(distance);\r\n    // Render\r\n    element.style.left = floatToPctStr(pos.x);\r\n    element.style.top = floatToPctStr(pos.y);\r\n    // Update vars for next iteration\r\n    time = time + FRAME_DURATION;\r\n    distance = distanceFromTime(time);\r\n  }, FRAME_DURATION);\r\n}","export enum DisplacementFactorMethodKeys {\r\n  inverse = \"inverse\",\r\n  exponential = \"exponential\",\r\n  powerInverse = \"powerInverse\",\r\n}\r\n\r\ntype DisplacementFactorFn = (originalDistance: number, elementSize: number) => number;\r\ntype DisplacementFactorMethod = (scale: number, offset?: number, power?: number) => DisplacementFactorFn;\r\ntype DisplacementFactorMethodsMap = {\r\n  [key in DisplacementFactorMethodKeys]: DisplacementFactorMethod;\r\n}\r\nexport const builtinDisplacementFactorMethods: DisplacementFactorMethodsMap = {\r\n  inverse: function(scale=0.02, offset=0.0, power=undefined) {\r\n    return function(originalDistance, elementSize) {\r\n      if (originalDistance === 0) {\r\n        return NaN;\r\n      }\r\n      else {\r\n        return (scale*1.0)/originalDistance + offset;\r\n      }\r\n    }\r\n  },\r\n  exponential: function(scale=0.1, offset=0.0, power=undefined) {\r\n    return function(originalDistance, elementSize) {\r\n      return Math.exp(scale-originalDistance) + offset;\r\n    }\r\n  },\r\n  powerInverse: function(scale=0.02, offset=0.0, power=0.6) {\r\n    return function(originalDistance, elementSize) {\r\n      if (originalDistance === 0) {\r\n        return NaN;\r\n      }\r\n      else {\r\n        return ((scale*1.0)/Math.pow(originalDistance*1.0, power) + offset);\r\n      }\r\n    }\r\n  }\r\n}","export interface IPoint {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport function getDistance(pointA: IPoint, pointB: IPoint) {\r\n  return Math.sqrt(Math.pow(pointA.x - pointB.x, 2) + Math.pow(pointA.y - pointB.y, 2));\r\n}\r\n\r\nexport function getRadius(point: IPoint) {\r\n    return Math.sqrt(point.x*point.x + point.y*point.y);\r\n}\r\n\r\nexport function getUnitVector(point: IPoint) {\r\n  const radius = getRadius(point);\r\n  return {\r\n    x: point.x / radius,\r\n    y: point.y / radius,\r\n  };\r\n}","import { IPoint, getRadius } from './geometry'\r\n\r\nexport enum ThresholdingMethodKeys {\r\n  threshold = \"threshold\",\r\n  noThreshold = \"noThreshold\",\r\n}\r\n\r\ntype ThresholdingFn = (directionUnitVector: IPoint, avoidanceFactor: number) => IPoint | null;\r\ntype ThresholdingMethod = (thresholdRadius?: number) => ThresholdingFn;\r\ntype ThresholdingMethodsMap = {\r\n  [key in ThresholdingMethodKeys]: ThresholdingMethod;\r\n}\r\nexport const builtinThresholdingMethods: ThresholdingMethodsMap = {\r\n  threshold: function(thresholdRadius=0.1) {\r\n    return function(directionUnitVector: IPoint, avoidanceFactor: number) {\r\n      if (avoidanceFactor === NaN) {\r\n        return null;\r\n      }\r\n      var offset = {\r\n        x: directionUnitVector.x*avoidanceFactor,\r\n        y: directionUnitVector.y*avoidanceFactor,\r\n      };\r\n      if (getRadius(offset) > thresholdRadius) {\r\n        return {\r\n          x: directionUnitVector.x*thresholdRadius,\r\n          y: directionUnitVector.y*thresholdRadius,\r\n        };\r\n      }\r\n      else {\r\n        return offset;\r\n      }\r\n    }\r\n  },\r\n  noThreshold: function(thresholdRadius=undefined) {\r\n    return function(directionUnitVector: IPoint, avoidanceFactor: number) {\r\n      if (avoidanceFactor === NaN) {\r\n        return null;\r\n      }\r\n      return {\r\n        x: directionUnitVector.x*avoidanceFactor,\r\n        y: directionUnitVector.y*avoidanceFactor,\r\n      };\r\n    }\r\n  }\r\n}","// avoidance.js\r\n// AUTHOR: Stephen Zhao\r\n// REPO: github.com/stephen-zhao/sophii.co\r\n\r\n// A standalone library for creating \"avoidance cloud\" effect.\r\n// All children of given containers will be animated to avoid the user's mouse.\r\n\r\nimport { Particle } from './particle';\r\nimport * as animate from './animate';\r\nimport * as geometry from './geometry';\r\nimport * as util from './util';\r\nimport { builtinDisplacementFactorMethods } from './displacing';\r\nimport { builtinThresholdingMethods } from './thresholding';\r\n\r\n// The class which exposes the public API\r\nexport default class Avoidance {\r\n  // input:\r\n  //   containerSelector\r\n  //    - css-selector string which specifies the elements\r\n  //      inside which the avoidance effect is triggered.\r\n  //   options\r\n  //    - an settings object that takes the following *optional* key/values:\r\n  //      factorMethod: {\r\n  //        name: one of \"inverse\", \"powerInverse\", or \"exponential\"\r\n  //        scale: a number\r\n  //        offset: a number\r\n  //        power: a number\r\n  //      },\r\n  //      displacementMethod: {\r\n  //        name: one of \"noThreshold\" or \"threshold\"\r\n  //        thresholdRadius: a number\r\n  //      },\r\n  //      timing: one of\r\n  //        \"linear\", \"easeOutCubic\", \"easeOutExpo\"\r\n  //      pathing: one of\r\n  //        \"linear\", \"bezierQuad\"\r\n  //   addChildrenAsParticles\r\n  //    - boolean which specifies whether or not the children\r\n  //      of the containers are added initially as tracked\r\n  //      particles. Defaults to true.\r\n  constructor(containerSelector, options = {}, addChildrenAsParticles = true) {\r\n    // save the containers\r\n    var containersCollection = document.querySelectorAll(containerSelector);\r\n    this.containers = Array.prototype.slice.call(containersCollection);\r\n    // save options for future use\r\n    this.options = this.initOptions(options);\r\n    // init tracked particles\r\n    this.trackedParticles = [];\r\n    this.trackedParticleElementsSet = new Set();\r\n    // \"fix\" event listeners\r\n    this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\r\n    this.clickHandler = this.clickHandler.bind(this);\r\n    this.touchStartHandler = this.touchStartHandler.bind(this);\r\n    this.touchEndHandler = this.touchEndHandler.bind(this);\r\n    // Create particles from all of the container's children\r\n    // and add them to the list of tracked particles, if specified to do so\r\n    if (addChildrenAsParticles) {\r\n      this.containers.forEach(function (container) {\r\n        for (var i = 0; i < container.children.length; ++i) {\r\n          this.startTrackingParticleElement(container.children[i], container);\r\n        }\r\n      }, this);\r\n    }\r\n    // set the initial status\r\n    this.status = \"ready\";\r\n  }\r\n\r\n  initOptions(userOptions) {\r\n    var options = {};\r\n\r\n    // Process factorMethod option\r\n    options.factorMethod = {};\r\n    if (\"factorMethod\" in userOptions) {\r\n      if (typeof userOptions.factorMethod === \"string\"\r\n          && (userOptions.factorMethod in builtinDisplacementFactorMethods)) {\r\n        options.factorMethod.name = userOptions.factorMethod;\r\n        options.factorMethod.scale = undefined;\r\n        options.factorMethod.offset = undefined;\r\n        options.factorMethod.power = undefined;\r\n      }\r\n      else if (typeof userOptions.factorMethod === \"object\") {\r\n        if ((\"name\" in userOptions.factorMethod)\r\n            && (typeof userOptions.factorMethod.name === \"string\")\r\n            && (userOptions.factorMethod.name in builtinDisplacementFactorMethods)) {\r\n          options.factorMethod.name = userOptions.factorMethod.name;\r\n        }\r\n        else {\r\n          options.factorMethod.name = undefined;\r\n        }\r\n        if ((\"scale\" in userOptions.factorMethod)\r\n            && (typeof userOptions.factorMethod.scale === \"number\")) {\r\n          options.factorMethod.scale = userOptions.factorMethod.scale;\r\n        }\r\n        else {\r\n          options.factorMethod.scale = undefined;\r\n        }\r\n        if ((\"offset\" in userOptions.factorMethod)\r\n            && (typeof userOptions.factorMethod.offset === \"number\")) {\r\n          options.factorMethod.offset = userOptions.factorMethod.offset;\r\n        }\r\n        else {\r\n          options.factorMethod.offset = undefined;\r\n        }\r\n        if ((\"power\" in userOptions.factorMethod)\r\n            && (typeof userOptions.factorMethod.power === \"number\")) {\r\n          options.factorMethod.power = userOptions.factorMethod.power;\r\n        }\r\n        else {\r\n          options.factorMethod.power = undefined;\r\n        }\r\n      }\r\n      else {\r\n        options.factorMethod.name = undefined;\r\n        options.factorMethod.scale = undefined;\r\n        options.factorMethod.offset = undefined;\r\n        options.factorMethod.power = undefined;\r\n      }\r\n    }\r\n\r\n    // Process displacementMethod\r\n    options.displacementMethod = {};\r\n    if (\"displacementMethod\" in userOptions) {\r\n      if (typeof userOptions.displacementMethod === \"string\"\r\n          && (userOptions.displacementMethod in builtinThresholdingMethods)) {\r\n        options.displacementMethod.name = userOptions.displacementMethod;\r\n        options.displacementMethod.thresholdRadius = undefined;\r\n      }\r\n      else if (typeof userOptions.displacementMethod === \"object\") {\r\n        if ((\"name\" in userOptions.displacementMethod)\r\n            && (typeof userOptions.displacementMethod.name === \"string\")\r\n            && (userOptions.displacementMethod.name in builtinThresholdingMethods)) {\r\n          options.displacementMethod.name = userOptions.displacementMethod.name;\r\n        }\r\n        else {\r\n          options.displacementMethod.name = undefined;\r\n        }\r\n        if ((\"thresholdRadius\" in userOptions.displacementMethod)\r\n            && (typeof userOptions.displacementMethod.thresholdRadius === \"number\")) {\r\n          options.displacementMethod.thresholdRadius = userOptions.displacementMethod.thresholdRadius;\r\n        }\r\n        else {\r\n          options.displacementMethod.thresholdRadius = undefined;\r\n        }\r\n      }\r\n      else {\r\n        options.displacementMethod.name = undefined;\r\n        options.displacementMethod.thresholdRadius = undefined;\r\n      }\r\n    }\r\n\r\n    // Process timings\r\n    if (\"timing\" in userOptions\r\n        && (typeof userOptions.timing === \"string\")\r\n        && (userOptions.timing in animate.timings)) {\r\n      options.timing = animate.timings[userOptions.timing];\r\n    }\r\n    else {\r\n      options.timing = animate.timings.easeOutExpo;\r\n    }\r\n    \r\n    // Process pathing\r\n    if (\"pathing\" in userOptions\r\n        && (typeof userOptions.pathing === \"string\")\r\n        && (userOptions.pathing in animate.paths)) {\r\n      options.pathing = userOptions.pathing;\r\n    }\r\n    else {\r\n      options.pathing = \"bezierQuad\";\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  addParticles(particleSelector, containerSelector) {\r\n    document.querySelectorAll(particleSelector).forEach(particleElement => {\r\n      this.startTrackingParticleElement(particleElement, containerSelector ? document.querySelector(containerSelector) : undefined);\r\n    }, this);\r\n  }\r\n\r\n  addParticleElement(particleElement, containerElement) {\r\n    this.startTrackingParticleElement(particleElement, containerElement);\r\n  }\r\n\r\n  removeParticles(particleSelector) {\r\n    this.stopTrackingParticleElements(document.querySelectorAll(particleSelector));\r\n  }\r\n\r\n  removeParticleElement(particleElement) {\r\n    this.stopTrackingParticleElement(particleElement);\r\n  }\r\n\r\n  startTrackingParticleElement(particleElement, containerElement) {\r\n    if (!this.trackedParticleElementsSet.has(particleElement)) {\r\n      if (!containerElement) {\r\n        containerElement = document.body;\r\n      }\r\n      var particle = new Particle(particleElement, containerElement);\r\n      this.trackedParticles.push(particle);\r\n      this.trackedParticleElementsSet.add(particleElement);\r\n    }\r\n  }\r\n\r\n  stopTrackingParticleElement(particleElement) {\r\n    if (this.trackedParticleElementsSet.has(particleElement)) {\r\n      // First remove from lookup set\r\n      this.trackedParticleElementsSet.delete(particleElement);\r\n      var foundIdx = this.trackedParticles.findIndex(function(particle) {\r\n        return particle.element === particleElement;\r\n      });\r\n      if (foundIdx !== -1) {\r\n        // Then dispose\r\n        this.trackedParticles[foundIdx].dispose();\r\n        // Then remove from tracked particles\r\n        this.trackedParticles.splice(foundIdx, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  stopTrackingParticleElements(particleElements) {\r\n    var particleElementSet = new Set(particleElements);\r\n    for (var i = 0; i < this.trackedParticles.length; ++i) {\r\n      if (particleElementSet.has(this.trackedParticles[i].element)) {\r\n        // First remove from lookup set\r\n        this.trackedParticleElementsSet.delete(this.trackedParticles[i].element);\r\n        // Then dispose\r\n        this.trackedParticles[i].dispose();\r\n        // Then remove from tracked particles\r\n        this.trackedParticles[i] = \"removed\";\r\n      }\r\n    }\r\n    // Realize the removal\r\n    this.trackedParticles = this.trackedParticles.filter(function(particle) {\r\n      return particle !== \"removed\";\r\n    });\r\n  }\r\n\r\n  start() {\r\n    // Add all event handlers to each container\r\n    this.containers.forEach(this.registerEventHandlers, this);\r\n    // Let particles know movement has started\r\n    this.trackedParticles.forEach(particle => {\r\n      particle.unfreeze();\r\n    });\r\n    this.status = \"running\";\r\n  }\r\n\r\n  stop() {\r\n    // Let all particles know to stop\r\n    this.trackedParticles.forEach(particle => {\r\n      particle.freeze();\r\n    });\r\n    // remove all event handlers from each container\r\n    this.containers.forEach(this.deregisterEventHandlers, this);\r\n    this.status = \"stopped\";\r\n  }\r\n\r\n  addContainers(containerSelector, addChildrenAsParticles = true) {\r\n    // Split work by processing each selected container iteratively\r\n    var containersCollection = document.querySelectorAll(containerSelector);\r\n    containersCollection.forEach(function(container) {\r\n      // Only add if not already added\r\n      var idx = this.containers.indexOf(container);\r\n      if (idx >= 0) {\r\n        return;\r\n      }\r\n      this.containers.push(container);\r\n      // Add children as particles if specified to do so\r\n      if (addChildrenAsParticles) {\r\n        for (var i = 0; i < container.children.length; ++i) {\r\n          this.startTrackingParticleElement(container.children[i]);\r\n        }\r\n      }\r\n      // Register handlers if we are already running\r\n      if (this.status === \"running\") {\r\n        this.registerEventHandlers(container);\r\n      }\r\n    }, this);\r\n  }\r\n\r\n  removeContainers(containerSelector, removeChildrenAsParticles = true) {\r\n    // Process each selected container iteratively\r\n    var containersCollection = document.querySelectorAll(containerSelector);\r\n    containersCollection.forEach(function(container) {\r\n      // Process only if the container is tracked\r\n      var idx = this.containers.indexOf(container);\r\n      if (idx < 0) {\r\n        return;\r\n      }\r\n      // Remove children as particles if specified to do so\r\n      if (removeChildrenAsParticles) {\r\n        this.stopTrackingParticleElements(container.children);\r\n      }\r\n      // Deregister events if we are running\r\n      if (this.status === \"running\") {\r\n        this.deregisterEventHandlers(container);\r\n      }\r\n      // Remove from tracked containers\r\n      this.containers.splice(idx, 1);\r\n    }, this);\r\n  }\r\n\r\n  registerEventHandlers(container) {\r\n    container.addEventListener(\"touchend\", this.touchEndHandler);\r\n    container.addEventListener(\"touchstart\", this.touchStartHandler);\r\n    container.addEventListener(\"mousemove\", this.mouseMoveHandler);\r\n    container.addEventListener(\"click\", this.clickHandler);\r\n  }\r\n\r\n  deregisterEventHandlers(container) {\r\n    container.removeEventListener(\"click\", this.clickHandler);\r\n    container.removeEventListener(\"mousemove\", this.mouseMoveHandler);\r\n    container.removeEventListener(\"touchstart\", this.touchStartHandler);\r\n    container.removeEventListener(\"touchend\", this.touchEndHandler);\r\n  }\r\n\r\n  mouseMoveHandler(event) {\r\n    if (this.touchStarted || this.touchEnded) {\r\n      // Do not handle a mouseMove for touch events\r\n      event.preventDefault();\r\n    }\r\n    else {\r\n      const container = event.currentTarget;\r\n      const mousePos = { x: event.pageX - container.offsetLeft, y: event.pageY - container.offsetTop };\r\n      this.computeAvoidance(container, mousePos, this.renderImmediateAvoidance.bind(this));\r\n    }\r\n  }\r\n\r\n  clickHandler(event) {\r\n    if (this.touchStarted || this.touchEnded) {\r\n      const container = event.currentTarget;\r\n      const touchPos = { x: event.pageX - container.offsetLeft, y: event.pageY - container.offsetTop };\r\n      this.computeAvoidance(container, touchPos, this.renderAnimatedAvoidance.bind(this));\r\n      this.touchStarted = false;\r\n      this.touchEnded = false;\r\n    }\r\n    else {\r\n      // click, but not touched\r\n    }\r\n  }\r\n\r\n  touchStartHandler(event) {\r\n    this.touchStarted = true;\r\n  }\r\n\r\n  touchEndHandler(event) {\r\n    this.touchEnded = true;\r\n  }\r\n\r\n  computeAvoidance(container, userPos, renderCallback) {\r\n    const containerRect = container.getBoundingClientRect();\r\n    const userPosRatio = {\r\n      x: userPos.x / containerRect.width,\r\n      y: userPos.y / containerRect.height,\r\n    };\r\n    this.trackedParticles.forEach(function (particle) {\r\n      const particleSizeRatio = particle.getSizeRatio();\r\n      const particleCentreOrigPosRatioRelUser = {\r\n        x: particle.originalPosRatio.x + particleSizeRatio.width*1.0 / 2 - userPosRatio.x,\r\n        y: particle.originalPosRatio.y + particleSizeRatio.height*1.0 / 2 - userPosRatio.y,\r\n      };\r\n      const particleCentreOrigDistRelUser = geometry.getRadius(particleCentreOrigPosRatioRelUser);\r\n      const avoidanceFactor = this.calculateAvoidanceFactor(particleCentreOrigDistRelUser, particleSizeRatio);\r\n      const avoidanceDisplacement = this.calculateAvoidanceDisplacement(\r\n        geometry.getUnitVector(particleCentreOrigPosRatioRelUser), avoidanceFactor);\r\n      renderCallback(avoidanceDisplacement, particle);\r\n    }, this);\r\n  }\r\n\r\n  renderImmediateAvoidance(avoidanceDisplacement, particle) {\r\n    if (avoidanceDisplacement === null) {\r\n      particle.element.style.display = \"none\";\r\n    }\r\n    else {\r\n      const particleNewPos = {\r\n        x: particle.originalPosRatio.x + avoidanceDisplacement.x,\r\n        y: particle.originalPosRatio.y + avoidanceDisplacement.y,\r\n      };\r\n      if (particle.element.style.display === \"none\") {\r\n        particle.element.style.display = \"\";\r\n      }\r\n      particle.element.style.left = util.floatToPctStr(particleNewPos.x);\r\n      particle.element.style.top = util.floatToPctStr(particleNewPos.y);\r\n    }\r\n  }\r\n\r\n  renderAnimatedAvoidance(avoidanceDisplacement, particle) {\r\n    if (avoidanceDisplacement === null) {\r\n      particle.element.style.display = \"none\";\r\n    }\r\n    else {\r\n      const particleOldPosRatio = particle.getPosRatio();\r\n      const particleNewPosRatio = {\r\n        x: particle.originalPosRatio.x + avoidanceDisplacement.x,\r\n        y: particle.originalPosRatio.y + avoidanceDisplacement.y,\r\n      };\r\n      if (particle.element.style.display === \"none\") {\r\n        particle.element.style.display = \"\";\r\n      }\r\n      const pathing = this.options.pathing === \"bezierQuad\"\r\n        ? animate.paths.bezierQuad(particleOldPosRatio, particle.originalPosRatio, particleNewPosRatio)\r\n        : animate.paths.linear(particleOldPosRatio, particleNewPosRatio);\r\n      animate.move(particle.element, pathing, 1000, this.options.timing);\r\n    }\r\n  }\r\n\r\n  calculateAvoidanceFactor(originalDistance, elementSize, method) {\r\n    if (method === undefined) {\r\n      method = this.options.factorMethod.name;\r\n    }\r\n    var methodFn = null;\r\n    if (method !== undefined) {\r\n      methodFn = builtinDisplacementFactorMethods[method];\r\n    }\r\n    else {\r\n      methodFn = builtinDisplacementFactorMethods.powerInverse;\r\n    }\r\n    return methodFn(\r\n      this.options.factorMethod.scale,\r\n      this.options.factorMethod.offset,\r\n      this.options.factorMethod.power\r\n    )(originalDistance, elementSize);\r\n  }\r\n  \r\n  calculateAvoidanceDisplacement(particleOrigPosRelMouse, avoidanceFactor, method) {\r\n    if (method === undefined) {\r\n      method = this.options.displacementMethod.name;\r\n    }\r\n    var methodFn = null;\r\n    if (method !== undefined) {\r\n      methodFn = builtinThresholdingMethods[method];\r\n    }\r\n    else {\r\n      methodFn = builtinThresholdingMethods.threshold;\r\n    }\r\n    return methodFn(\r\n      this.options.displacementMethod.thresholdRadius\r\n    )(particleOrigPosRelMouse, avoidanceFactor);\r\n  }\r\n}"],"names":["Particle","element","container","_element","_container","_originalPosRatio","this","getPosRatio","elementRect","getBoundingClientRect","containerRect","x","left","width","y","top","height","_frozenStyledPosition","style","position","delayedUnfreezeActions","_this","removeEventListener","bind","addEventListener","floatToPctStr","DisplacementFactorMethodKeys","timings","linear","duration","t","easeOutCubic","Math","pow","easeOutExpo","paths","p0","p1","s","bezierQuad","p2","getRadius","point","sqrt","ThresholdingMethodKeys","builtinDisplacementFactorMethods","inverse","scale","offset","originalDistance","elementSize","NaN","exponential","exp","powerInverse","power","builtinThresholdingMethods","threshold","thresholdRadius","directionUnitVector","avoidanceFactor","noThreshold","containerSelector","options","addChildrenAsParticles","containersCollection","document","querySelectorAll","containers","Array","prototype","slice","call","initOptions","trackedParticles","trackedParticleElementsSet","Set","mouseMoveHandler","clickHandler","touchStartHandler","touchEndHandler","forEach","i","children","length","startTrackingParticleElement","status","userOptions","factorMethod","name","undefined","_typeof","displacementMethod","timing","animate","pathing","particleSelector","particleElement","querySelector","containerElement","stopTrackingParticleElements","stopTrackingParticleElement","has","body","particle","push","add","foundIdx","findIndex","dispose","splice","particleElements","particleElementSet","filter","registerEventHandlers","unfreeze","freeze","deregisterEventHandlers","indexOf","removeChildrenAsParticles","idx","event","touchStarted","touchEnded","preventDefault","currentTarget","mousePos","pageX","offsetLeft","pageY","offsetTop","computeAvoidance","renderImmediateAvoidance","touchPos","renderAnimatedAvoidance","userPos","renderCallback","userPosRatio","radius","particleSizeRatio","getSizeRatio","particleCentreOrigPosRatioRelUser","originalPosRatio","particleCentreOrigDistRelUser","geometry","calculateAvoidanceFactor","avoidanceDisplacement","calculateAvoidanceDisplacement","display","particleNewPos","util","particleOldPosRatio","particleNewPosRatio","time","distance","distanceFromTime","animation","setInterval","clearInterval","pos","method","methodFn","particleOrigPosRelMouse"],"mappings":"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"}